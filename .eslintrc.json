{
  "env": {
    "browser": true,
    "es2021": true
  },
  "plugins": [
    "react",
    "unicorn",
    "canonical",
    "folders",
    "jest"
  ],
  "extends": [
    "airbnb",
    "airbnb/hooks",
    "plugin:react/recommended",
    "plugin:unicorn/recommended",
    "plugin:prettier/recommended",
    "plugin:jest/recommended"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx"
        ],
        "moduleDirectory": [
          "node_modules",
          "src"
        ]
      }
    }
  },
  "overrides": [
    {
      "files": [
        "**/*/store/**/*"
      ],
      "rules": {
        "no-param-reassign": [
          "error",
          {
            "props": true,
            "ignorePropertyModificationsFor": [
              "state"
            ]
          }
        ]
      }
    },
    {
      "files": [
        "./src/app/propTypes.js"
      ],
      "rules": {
        "unicorn/prevent-abbreviations": "off"
      }
    },
    {
      "files": [
        "./src/**/{config.js,*.config.js,consts.js,*.consts.js,constants.js,*.constants.js}"
      ],
      "rules": {
        "canonical/id-match": [
          "error",
          "^[A-Z_\\d\\W]+$",
          {
            "ignoreNamedImports": true
          }
        ]
      }
    },
    {
      "files": [
        "./src/*/shared/index.js"
      ],
      "rules": {
        "canonical/id-match": [
          "error",
          "^([A-Z][a-z]*)?Shared$",
          {
            "ignoreNamedImports": true
          }
        ]
      }
    },
    {
      "files": [
        "./src/*/containers/index.js"
      ],
      "rules": {
        "canonical/id-match": [
          "error",
          "^([A-Z][a-z]*)?Containers$",
          {
            "ignoreNamedImports": true
          }
        ]
      }
    },
    {
      "files": [
        "./src/*/layouts/index.js"
      ],
      "rules": {
        "canonical/id-match": [
          "error",
          "^([A-Z][a-z]*)?Layouts$",
          {
            "ignoreNamedImports": true
          }
        ]
      }
    },
    {
      "files": [
        "./src/!(app)/pages/index.js"
      ],
      "rules": {
        "canonical/id-match": [
          "error",
          "^([A-Z][a-z]*)?Pages$",
          {
            "ignoreNamedImports": true
          }
        ]
      }
    },
    {
      "files": [
        "./src/*/*"
      ],
      "rules": {
        "canonical/filename-no-index": "error"
      }
    }
  ],
  "rules": {
    "prettier/prettier": "error",
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "camelCase": true,
          "pascalCase": true
        }
      }
    ],
    "sort-imports": [
      "error",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "type",
          "internal"
        ],
        "pathGroups": [
          {
            "pattern": "app/**",
            "group": "internal",
            "position": "before"
          }
        ]
      }
    ],
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "function-declaration"
      }
    ],
    "max-len": [
      "error",
      {
        "code": 80,
        "ignorePattern": "^import"
      }
    ],
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "group": [
              ".*"
            ],
            "message": "Relative imports prohibited. Use absolute path."
          }
        ]
      }
    ],
    "import/no-unused-modules": [
      "error",
      {
        "unusedExports": true
      }
    ],
    "import/no-restricted-paths": [
      "error",
      {
        "zones": [
          {
            "target": "./src/!(app)/{!(gateway)/**/*,gateway/**/!(input.js),*}",
            "from": "./src/app/**/*",
            "message": "Direct imports from 'app' to feature prohibited. Import all incoming modules in the input gateway"
          },
          {
            "target": "./src/app/**/*",
            "from": "./src/!(app)/{!(gateway)/**/*,gateway/**/!(output.js),*}",
            "message": "Direct imports from feature to 'app' prohibited. Import all exposed feature modules from its own output gateway"
          },
          {
            "target": "./src/!(app)/gateway/**/input.js",
            "from": "./src/!(app)/gateway/**/input.js",
            "message": "Input gateways cannot import modules from other input gateways"
          },
          {
            "target": "./src/!(app)/gateway/**/output.js",
            "from": "./src/!(app)/gateway/**/output.js",
            "message": "Output gateways cannot import modules from other output gateways"
          },
          {
            "target": "./src/!(app)/gateway/**/input.js",
            "from": "./src/!(app)/{!(gateway)/**/*,gateway/**/!(output.js),*}",
            "message": "Direct imports from other features prohibited. Import only exposed feature modules from its own output gateway"
          },
          {
            "target": "./src/!(app)/gateway/**/output.js",
            "from": "./src/!(app)/gateway/**/input.js",
            "message": "Output gateways cannot import from input gateways"
          },
          {
            "target": "./src/*/{!(containers)/**/*,*}",
            "from": "./src/*/containers/{!(index.js),!(index.js)/**,**/!(index.js)}",
            "message": "All containers should be imported from corresponding registry (src/[domain]/containers/index.js)"
          },
          {
            "target": "./src/*/{!(layouts)/**/*,*}",
            "from": "./src/*/layouts/{!(index.js),!(index.js)/**,**/!(index.js)}",
            "message": "All layouts should be imported from corresponding registry (src/[domain]/layouts/index.js)"
          },
          {
            "target": "./src/*/{!(shared)/**/*,*}",
            "from": "./src/*/shared/{!(index.js),!(index.js)/**,**/!(index.js)}",
            "message": "All shared components should be imported from corresponding registry (src/[domain]/shared/index.js)"
          },
          {
            "target": "./src/!(app)/{!(pages)/**/*,*}",
            "from": "./src/!(app)/pages/{!(index.js),!(index.js)/**}",
            "message": "All feature pages should be imported from pages registry. src/[feature]/pages/index.js"
          }
        ]
      }
    ],
    "no-restricted-syntax": [
      "error",
      "ForInStatement",
      "LabeledStatement",
      "WithStatement"
    ],
    "import/no-default-export": "error",
    "unicorn/no-unused-properties": "error",
    "unicorn/no-unsafe-regex": "error",
    "folders/match-regex": ["error", "^([a-z]|[A-Z])+((\\d)|([A-Z0-9][a-z0-9]+))*([A-Z])?$", "/src/"],
    "unicorn/consistent-function-scoping": ["error", {
      "checkArrowFunctions": false 
    }],
    "react/react-in-jsx-scope": "off",
    "import/prefer-default-export": "off",
    "unicorn/no-array-reduce": "off",
    "unicorn/prefer-spread": "off",
    "unicorn/no-array-for-each": "off",
    "unicorn/no-null": "off"
  },
  "ignorePatterns": [
    "build/"
  ]
}